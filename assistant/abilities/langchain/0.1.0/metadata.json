{
    "id": "langchain",
    "name": "LangChain",
    "versions": {
        "package": "0.1.0",
        "product": "0.2"
    },
    "description": "Building applications with LLMs through composability.",
    "repository": {
        "type": "git",
        "url": "https://github.com/langchain-ai/langchain.git"
      },
    "author": {
        "name": "LangChain, Inc.",
        "url": "https://www.langchain.com/"
    },
    "maintainer": {
        "name": "Sam Johnston",
        "email": "samj@samj.net",
        "url": "http://samjohnston.org"
    },
    "language": "python",
    "license": "Apache-2.0",
    "dependencies": [
        {
            "type": "python",
            "id": "langchain",
            "name": "LangChain",
            "description": "This will install the bare minimum requirements of LangChain. A lot of the value of LangChain comes when integrating it with various model providers, datastores, etc.",
            "versions": {
                "required": ">=0.2.0"
            }
        },
        {
            "type": "python",
            "id": "langchain-core",
            "name": "LangChain Core",
            "description": "Base abstractions that the rest of the LangChain ecosystem uses, along with the LangChain Expression Language. It is automatically installed by langchain, but can also be used separately.",
            "versions": {
                "required": ">=0.2.0"
            }
        },
        {
            "type": "python",
            "id": "langchain-cli",
            "name": "LangChain CLI",
            "description": "CLI for working with LangChain templates and other LangServe projects.",
            "versions": {
                "required": ">=0.0.22"
            }
        },
        {
            "type": "python",
            "id": "langchain-community",
            "name": "LangChain Community",
            "description": "Third-party integrations. It is automatically installed by langchain, but can also be used separately.",
            "versions": {
                "required": ">=0.2.0"
            }
        },
        {
            "type": "python",
            "id": "langchain-experimental",
            "name": "LangChain Experimental",
            "description": "experimental LangChain code, intended for research and experimental uses.",
            "versions": {
                "required": ">=0.0.59"
            }
        },
        {
            "type": "python",
            "id": "langchain-text-splitters",
            "name": "LangChain Text Splitters",
            "description": "LangChain text splitting utilities",
            "versions": {
                "required": ">=0.2.0"
            }
        },
        {
            "type": "python",
            "id": "langchainhub",
            "name": "LangChain Hub",
            "description": "LangChain Hub API client.",
            "versions": {
                "required": ">=0.1.16"
            }
        },
        {
            "type": "python",
            "id": "langchain-openai",
            "name": "LangChain OpenAI",
            "description": "LangChain integrations for OpenAI through their openai SDK.",
            "versions": {
                "required": ">=0.1.7"
            }
        },
        {
            "type": "python",
            "id": "langchain-chroma",
            "name": "LangChain Chroma",
            "description": "LangChain integration with Chroma.",
            "versions": {
                "required": ">=0.1.1"
            }
        },
        {
            "type": "python",
            "id": "langgraph",
            "name": "LangGraph",
            "description": "Building language agents as graphs. Library for building stateful, multi-actor applications with LLMs, built on top of (and intended to be used with) LangChain.",
            "versions": {
                "required": ">=0.0.50"
            }
        },
        {
            "type": "python",
            "id": "langserve",
            "name": "LangServe",
            "description": "Building language agents as graphs. Library for building stateful, multi-actor applications with LLMs, built on top of (and intended to be used with) LangChain.",
            "versions": {
                "required": ">=0.2.0"
            },
            "extras": [
                "all",
                "client",
                "server"
            ]
        },
        {
            "type": "python",
            "id": "langsmith",
            "name": "LangSmith",
            "description": "Python client for interacting with the LangSmith platform.",
            "versions": {
                "required": ">=0.1.59"
            }
        }
    ]
}
